{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SQL DDL h1 {color:blue;} h3 {color:green;} table {padding:0px;margin:0px;} th {color:white;font-weight:bold;background-color:blue;} div.comentari { width:80%;margin:10px auto;border:2px solid red; color : green; }","title":"Home"},{"location":"#sql-ddl","text":"h1 {color:blue;} h3 {color:green;} table {padding:0px;margin:0px;} th {color:white;font-weight:bold;background-color:blue;} div.comentari { width:80%;margin:10px auto;border:2px solid red; color : green; }","title":"SQL DDL"},{"location":"Apartat01/","text":"SQL DDL h1 {color:blue;} h3 {color:green;} table {padding:0px;margin:0px;} th {color:white;font-weight:bold;background-color:blue;} div.comentari { width:80%;margin:10px auto;border:2px solid red; color : green; } SQL DQL Com ja sabeu, SQL ( structured query language ) \u00e9s el llenguatge que ens permet comunicar-nos, directament o a trav\u00e9s d'una aplicaci\u00f3, amb la base de dades. Com hem vist en l'anterior unitat, dins del llenguatge SQL podem trobar diferents subconjunts d'instruccions que formen subseccions de SQL. Entre elles est\u00e0 DQL, que integra totes les instruccions que utilitzem per realitzar consultes sobre la base de dades. La instrucci\u00f3 SELECT La instrucci\u00f3 b\u00e0sica per fer consultes sobre les dades que tenim a la base de dades s'anomena SELECT . La seua sintaxi \u00e9s: SELECT columnes FROM taula WHERE condici\u00f3; La cl\u00e0usula WHERE i la condici\u00f3 no s\u00f3n obligatoris, per\u00f2 si no posem cap condici\u00f3 se mostraran totes les files de la taula. SELECT: triar les columnes No \u00e9s obligat especificar les columnes que volem veure. Si posem un asterisc (*), la consulta les tornar\u00e0 totes. Aix\u00ed, una instrucci\u00f3 com: SELECT * FROM cine; Ens mostrar\u00e0 totes les files amb totes les columnes de cada fila de la taula cine . Si tenim una taula empleats amb la seg\u00fcent estructura: idEmp, nomEmp, cognomEmp, souEmp Podem veure nom\u00e9s el nom i els cognoms fent: SELECT nomEmp,cognomEmp FROM empleats; Condicions: la cl\u00e0usula WHERE No sempre volem veure totes les files de la taula. Per a fer el filtre utilitzem la cl\u00e0usula WHERE i una o m\u00e9s condicions. Per exemple SELECT * FROM empleats; ens mostra tota la informaci\u00f3 de tots els empleats. Mentre que SELECT * FROM empleats WHERE souEmp > 1000; mostra nom\u00e9s els empleats que cobren m\u00e9s de 1000\u20ac al mes Condicions: operadors de comparaci\u00f3 En la cl\u00e0usula WHERE podem posar qualsevol expressi\u00f3 que tinga sentit i que se puga avaluar a verdader o fals. Aix\u00ed, podem utilitzar operadors de comparaci\u00f3 com OPERADOR SIGNIFICAT OPERADOR SIGNIFICAT > Major que < Menor que >= Major o igual que < = Menor o igual que = Igual que != Diferent que Exemples: ...WHERE souEmp >= 1000; ...WHERE souEmp !=800; Condicions: operador LIKE Tamb\u00e9 tenim un operador espec\u00edfic de SQL que s'anomena LIKE i que ens permet preguntar si una columna cont\u00e9 un valor (no si \u00e9s igual, sino si el cont\u00e9). Per exemple, si fem: SELECT * FROM empleats WHERE nomEmp=\"Jose\"; nom\u00e9s obtindrem empleats amb el nom Jose . Ara b\u00e9, si fem SELECT * FROM empleats WHERE nomEmp LIKE \"%Jose%\"; apareixeran tamb\u00e9 els empleats amb noms com \"Jose Antonio\", \"Maria Jos\u00e9\", \"Jos\u00e9 Luis\", etc. Condicions: operador LIKE El car\u00e0cter % fa de comod\u00ed de 0,1 o m\u00e9s digits. Tamb\u00e9 podem utilitzar el gui\u00f3 baix (\"_\") per fer de comod\u00ed de nom\u00e9s un digit. Exemple: Per llistar tots els empleats que el seu nom comence per F: SELECT * FROM empleats WHERE nomEmp LIKE \"F%\"; Ara no posem el % del principi, perqu\u00e8 si el posem ens mostrar\u00e0 tots els noms que continguen la lletra \"F\", no nom\u00e9s els que comencen per \"F\". Condicions: operador LIKE Exemple: Per buscar tots els empleats que el nom comence per S i acabe per Z i a m\u00e9s el cognom tinga 8 lletres, en lloc de fer WHERE cognomEmp LIKE \"F%Z\" que ens tornaria tots els empleats que els cognoms comencen per F i acaben en Z, haur\u00edem de fer WHERE cognomEmp LIKE \"F______Z\" (amb 6 guions baixos) que ens tornar\u00e0 els empleats que el seu cognom comence per F, acabe en Z i entre mig de la F i la Z tinguen exactament 6 car\u00e0cters. Operadors l\u00f2gics Podem utilitzar els operadors l\u00f2gics per preguntar per 2 o m\u00e9s condicions en el mateix WHERE, o tamb\u00e9 per preguntar si no se compleix una condici\u00f3. Els operadors l\u00f2gics, com sabreu, s\u00f3n: OPERADOR SIGNIFICAT AND I l\u00f2gic. Si separem dues condicions amb **AND** s'han de complir les dues| OR O l\u00f2gic. Si separem dues condicions amb **OR** nom\u00e9s en que una siga certa el total ja \u00e9s cert NOT Negaci\u00f3. Nega la condici\u00f3 que ve despr\u00e9s Operadors l\u00f2gics Per exemple, volem llistar els empleats que el nom comence per \"F\" i que els cognoms continguen la lletra \"z\". SELECT * FROM empleats WHERE nomEmp LIKE \"F%\" AND cognomEmp LIKE \"%z%\"; Volem llistar els empleats que no tinguen la lletra \"z\" en els cognoms: SELECT * FROM empleats WHERE cognomEmp NOT LIKE \"%z%\";","title":"Apartat 01"},{"location":"Apartat01/#sql-ddl","text":"h1 {color:blue;} h3 {color:green;} table {padding:0px;margin:0px;} th {color:white;font-weight:bold;background-color:blue;} div.comentari { width:80%;margin:10px auto;border:2px solid red; color : green; }","title":"SQL DDL"},{"location":"Apartat01/#sql-dql","text":"Com ja sabeu, SQL ( structured query language ) \u00e9s el llenguatge que ens permet comunicar-nos, directament o a trav\u00e9s d'una aplicaci\u00f3, amb la base de dades. Com hem vist en l'anterior unitat, dins del llenguatge SQL podem trobar diferents subconjunts d'instruccions que formen subseccions de SQL. Entre elles est\u00e0 DQL, que integra totes les instruccions que utilitzem per realitzar consultes sobre la base de dades.","title":"SQL DQL"},{"location":"Apartat01/#la-instruccio-select","text":"La instrucci\u00f3 b\u00e0sica per fer consultes sobre les dades que tenim a la base de dades s'anomena SELECT . La seua sintaxi \u00e9s: SELECT columnes FROM taula WHERE condici\u00f3; La cl\u00e0usula WHERE i la condici\u00f3 no s\u00f3n obligatoris, per\u00f2 si no posem cap condici\u00f3 se mostraran totes les files de la taula.","title":"La instrucci\u00f3 SELECT"},{"location":"Apartat01/#select-triar-les-columnes","text":"No \u00e9s obligat especificar les columnes que volem veure. Si posem un asterisc (*), la consulta les tornar\u00e0 totes. Aix\u00ed, una instrucci\u00f3 com: SELECT * FROM cine; Ens mostrar\u00e0 totes les files amb totes les columnes de cada fila de la taula cine . Si tenim una taula empleats amb la seg\u00fcent estructura: idEmp, nomEmp, cognomEmp, souEmp Podem veure nom\u00e9s el nom i els cognoms fent: SELECT nomEmp,cognomEmp FROM empleats;","title":"SELECT: triar les columnes"},{"location":"Apartat01/#condicions-la-clausula-where","text":"No sempre volem veure totes les files de la taula. Per a fer el filtre utilitzem la cl\u00e0usula WHERE i una o m\u00e9s condicions. Per exemple SELECT * FROM empleats; ens mostra tota la informaci\u00f3 de tots els empleats. Mentre que SELECT * FROM empleats WHERE souEmp > 1000; mostra nom\u00e9s els empleats que cobren m\u00e9s de 1000\u20ac al mes","title":"Condicions: la cl\u00e0usula WHERE"},{"location":"Apartat01/#condicions-operadors-de-comparacio","text":"En la cl\u00e0usula WHERE podem posar qualsevol expressi\u00f3 que tinga sentit i que se puga avaluar a verdader o fals. Aix\u00ed, podem utilitzar operadors de comparaci\u00f3 com OPERADOR SIGNIFICAT OPERADOR SIGNIFICAT > Major que < Menor que >= Major o igual que < = Menor o igual que = Igual que != Diferent que","title":"Condicions: operadors de comparaci\u00f3"},{"location":"Apartat01/#condicions-operador-like","text":"Tamb\u00e9 tenim un operador espec\u00edfic de SQL que s'anomena LIKE i que ens permet preguntar si una columna cont\u00e9 un valor (no si \u00e9s igual, sino si el cont\u00e9). Per exemple, si fem: SELECT * FROM empleats WHERE nomEmp=\"Jose\"; nom\u00e9s obtindrem empleats amb el nom Jose . Ara b\u00e9, si fem SELECT * FROM empleats WHERE nomEmp LIKE \"%Jose%\"; apareixeran tamb\u00e9 els empleats amb noms com \"Jose Antonio\", \"Maria Jos\u00e9\", \"Jos\u00e9 Luis\", etc.","title":"Condicions: operador LIKE"},{"location":"Apartat01/#condicions-operador-like_1","text":"El car\u00e0cter % fa de comod\u00ed de 0,1 o m\u00e9s digits. Tamb\u00e9 podem utilitzar el gui\u00f3 baix (\"_\") per fer de comod\u00ed de nom\u00e9s un digit.","title":"Condicions: operador LIKE"},{"location":"Apartat01/#condicions-operador-like_2","text":"","title":"Condicions: operador LIKE"},{"location":"Apartat01/#operadors-logics","text":"Podem utilitzar els operadors l\u00f2gics per preguntar per 2 o m\u00e9s condicions en el mateix WHERE, o tamb\u00e9 per preguntar si no se compleix una condici\u00f3. Els operadors l\u00f2gics, com sabreu, s\u00f3n: OPERADOR SIGNIFICAT AND I l\u00f2gic. Si separem dues condicions amb **AND** s'han de complir les dues| OR O l\u00f2gic. Si separem dues condicions amb **OR** nom\u00e9s en que una siga certa el total ja \u00e9s cert NOT Negaci\u00f3. Nega la condici\u00f3 que ve despr\u00e9s","title":"Operadors l\u00f2gics"},{"location":"Apartat01/#operadors-logics_1","text":"Per exemple, volem llistar els empleats que el nom comence per \"F\" i que els cognoms continguen la lletra \"z\". SELECT * FROM empleats WHERE nomEmp LIKE \"F%\" AND cognomEmp LIKE \"%z%\"; Volem llistar els empleats que no tinguen la lletra \"z\" en els cognoms: SELECT * FROM empleats WHERE cognomEmp NOT LIKE \"%z%\";","title":"Operadors l\u00f2gics"},{"location":"Apartat02/","text":"Operadors BETWEEN, IS NULL i IN Operador BETWEEN Podem utilitzar l'operador BETWEEN per comprovar que un valor estiga dins d'un interval. Funciona amb n\u00fameros i amb cadenes. Operador BETWEEN Exemple Si volem mostrar els empleats que cobren entre 500 i 1000 euros, ho podem fer posant dues condicions unides per un AND. SELECT * FROM empleats WHERE empSou >=500 AND empSou <=1000; L'alternativa \u00e9s utilitzar l'operador BETWEEN per indicar en la condici\u00f3 que volem els valors que estiguen entre dues quantitats: SELECT * FROM empleats WHERE empSou BETWEEN 500 AND 1000; Operador BETWEEN Exemple Si, pel contrari, volem llistar els empleats que no cobren entre 500 i 1000 euros, la manera m\u00e9s senzilla de fer-ho \u00e9s afegir a la condici\u00f3 anterior l'operador NOT, que nega la condici\u00f3. SELECT * FROM empleats WHERE empSou NOT BETWEEN 500 AND 1000; Operador IN Suposem que volem llistar els empleats que cobren 500, 600, 700, 800 o 900 euros. Ho podem fer posant totes eixes condicions unides per un OR (no s'han de complir totes, en una \u00e9s suficient): SELECT * FROM empleats WHERE empSou=500 OR empSou=600 OR empSou=700 OR empSou=800 OR empSou=900; Operador IN Ara b\u00e9, tamb\u00e9 tenim un operador que ens facilita eixes consultes: IN . Amb eixe operador podem preguntar si un valor est\u00e0 en una llista. La mateixa consulta anterior, amb IN , seria aix\u00ed: SELECT * FROM empleats WHERE empSou IN (500,600,700,800,900); Per suposat, tamb\u00e9 podem negar la condici\u00f3 i mostrar els empleats que no cobren cap d'eixes quantitats: SELECT * FROM empleats WHERE empSou NOT IN (500,600,700,800,900); Columnes calculades Columnes calculades Entre el SELECT i el FROM hem de posar els noms de les columnes que voleu veure, per\u00f2 tamb\u00e9 podem posar altres coses com c\u00e0lculs o expresions. Columnes calculades Exemple Un llistat dels empleats que cobren m\u00e9s de 1000\u20ac al mes seria: SELECT nomEmp,cognomEmp,souEmp FROM empleats WHERE souEmp > 1000; Si volem que aparega en el llistat el que cobren a l'any, sempre que se puga calcular no hi ha cap problema. Si sabem que els empleats cobren 14 pagues a l'any, podem fer un c\u00e0lcul molt senzill: SELECT nomEmp,cognomEmp,souEmp,souEmp*14 FROM empleats WHERE souEmp > 1000; Aix\u00ed ens mostrar\u00e0 en la columna souEmp el que cobren al mes, i en la columna souEmp*14 el que cobren a l'any. Ordenar el resultat de la consulta Ordenar el resultat de la consulta Per defecte la sent\u00e8ncia SELECT mostra les files en el mateix ordre que estan guardades en la taula. Si volem veure el llistat ordenat d'una altra manera, ho podem fer afegint la cl\u00e0usula ORDER BY . Podem especificar per quina columna o columnes volem que ordene el llistat, i tamb\u00e9 si volem que l'ordre siga ascendent (per defecte) o descendent. Ordenar el resultat de la consulta Exemple SELECT * FROM empleats; mostra tots els empleats en l'ordre que estan a la taula. SELECT * FROM empleats ORDER BY cognomEmp; mostra tots els empleats ordenats alfab\u00e8ticament per cognoms (de l'A a la Z) SELECT * FROM empleats ORDER BY cognomEmp DESC; mostra tots els empleats ordenats alfab\u00e8ticament per cognoms per\u00f2 en ordre descendent (de la Z a l'A) T\u00edtols de les columnes T\u00edtols de les columnes Si tenim noms de columnes com ara nomEmp , cognomEmp , souEmp , etc., i sobretot si tenim columnes calculades, quan fem el llistat potser voldrem canviar els t\u00edtols. Ho podem fer amb la cl\u00e0usula AS en el SELECT . T\u00edtols de les columnes Si fem SELECT nomEmp, cognomEmp, souEmp FROM empleat; obtindrem: Si volem que els noms de les columnes canvien i tinguen m\u00e9s significat, ho podem fer amb la cl\u00e0usula AS posant-li un alias a les columnes que ens interessen. T\u00edtols de les columnes Exemple SELECT nomEmp AS `Nom empleat`, cognomEmp AS `Cognoms empleat`, souEmp AS `Sou mensual` FROM empleat; donaria com a eixida: Mostrar valors \u00fanics Mostrar valors \u00fanics De vegades ens interessa mostrar els valors que hi ha en una columna sense que apareguen valors repetits. Suposem que ens demanen una consulta que mostre quins oficis tenen els nostres empleats. El primer que far\u00edem, segurament, \u00e9s: SELECT ofiEmp FROM empleat; El resultat seria algo aix\u00ed: Mostrar valors \u00fanics Com veiem, ens mostra els oficis repetits perqu\u00e8 torna tots els oficis de tots els empleats. Com fer que cada ofici aparega nom\u00e9s una vegada? Utilitzant la cl\u00e0usula DISTINCT en la consulta, que fa que no apareguen valors repetits. SELECT DISTINCT ofiEmp FROM empleat; Ara el resultat ser\u00e0: Exercici 1 Si en la base de dades cines tenim una taula cine amb l'estructura: codigo (un id del cine) nombre (el nom del cine) ciudad (el nom de la poblaci\u00f3 on est\u00e0 el cine) Com podr\u00edem fer una consulta que ens mostre la llista de poblacions on hi ha cine? I si una ciutat t\u00e9 m\u00e9s d'un cine, com podem fer que nom\u00e9s aparega una vegada en el llistat?","title":"Apartat 02"},{"location":"Apartat02/#operadors-between-is-null-i-in","text":"","title":"Operadors BETWEEN, IS NULL i IN"},{"location":"Apartat02/#operador-between","text":"Podem utilitzar l'operador BETWEEN per comprovar que un valor estiga dins d'un interval. Funciona amb n\u00fameros i amb cadenes.","title":"Operador BETWEEN"},{"location":"Apartat02/#operador-between_1","text":"","title":"Operador BETWEEN"},{"location":"Apartat02/#operador-between_2","text":"","title":"Operador BETWEEN"},{"location":"Apartat02/#operador-in","text":"Suposem que volem llistar els empleats que cobren 500, 600, 700, 800 o 900 euros. Ho podem fer posant totes eixes condicions unides per un OR (no s'han de complir totes, en una \u00e9s suficient): SELECT * FROM empleats WHERE empSou=500 OR empSou=600 OR empSou=700 OR empSou=800 OR empSou=900;","title":"Operador IN"},{"location":"Apartat02/#operador-in_1","text":"Ara b\u00e9, tamb\u00e9 tenim un operador que ens facilita eixes consultes: IN . Amb eixe operador podem preguntar si un valor est\u00e0 en una llista. La mateixa consulta anterior, amb IN , seria aix\u00ed: SELECT * FROM empleats WHERE empSou IN (500,600,700,800,900); Per suposat, tamb\u00e9 podem negar la condici\u00f3 i mostrar els empleats que no cobren cap d'eixes quantitats: SELECT * FROM empleats WHERE empSou NOT IN (500,600,700,800,900);","title":"Operador IN"},{"location":"Apartat02/#columnes-calculades","text":"","title":"Columnes calculades"},{"location":"Apartat02/#columnes-calculades_1","text":"Entre el SELECT i el FROM hem de posar els noms de les columnes que voleu veure, per\u00f2 tamb\u00e9 podem posar altres coses com c\u00e0lculs o expresions.","title":"Columnes calculades"},{"location":"Apartat02/#columnes-calculades_2","text":"","title":"Columnes calculades"},{"location":"Apartat02/#ordenar-el-resultat-de-la-consulta","text":"","title":"Ordenar el resultat de la consulta"},{"location":"Apartat02/#ordenar-el-resultat-de-la-consulta_1","text":"Per defecte la sent\u00e8ncia SELECT mostra les files en el mateix ordre que estan guardades en la taula. Si volem veure el llistat ordenat d'una altra manera, ho podem fer afegint la cl\u00e0usula ORDER BY . Podem especificar per quina columna o columnes volem que ordene el llistat, i tamb\u00e9 si volem que l'ordre siga ascendent (per defecte) o descendent.","title":"Ordenar el resultat de la consulta"},{"location":"Apartat02/#ordenar-el-resultat-de-la-consulta_2","text":"","title":"Ordenar el resultat de la consulta"},{"location":"Apartat02/#titols-de-les-columnes","text":"","title":"T\u00edtols de les columnes"},{"location":"Apartat02/#titols-de-les-columnes_1","text":"Si tenim noms de columnes com ara nomEmp , cognomEmp , souEmp , etc., i sobretot si tenim columnes calculades, quan fem el llistat potser voldrem canviar els t\u00edtols. Ho podem fer amb la cl\u00e0usula AS en el SELECT .","title":"T\u00edtols de les columnes"},{"location":"Apartat02/#titols-de-les-columnes_2","text":"Si fem SELECT nomEmp, cognomEmp, souEmp FROM empleat; obtindrem: Si volem que els noms de les columnes canvien i tinguen m\u00e9s significat, ho podem fer amb la cl\u00e0usula AS posant-li un alias a les columnes que ens interessen.","title":"T\u00edtols de les columnes"},{"location":"Apartat02/#titols-de-les-columnes_3","text":"","title":"T\u00edtols de les columnes"},{"location":"Apartat02/#mostrar-valors-unics","text":"","title":"Mostrar valors \u00fanics"},{"location":"Apartat02/#mostrar-valors-unics_1","text":"De vegades ens interessa mostrar els valors que hi ha en una columna sense que apareguen valors repetits. Suposem que ens demanen una consulta que mostre quins oficis tenen els nostres empleats. El primer que far\u00edem, segurament, \u00e9s: SELECT ofiEmp FROM empleat; El resultat seria algo aix\u00ed:","title":"Mostrar valors \u00fanics"},{"location":"Apartat02/#mostrar-valors-unics_2","text":"Com veiem, ens mostra els oficis repetits perqu\u00e8 torna tots els oficis de tots els empleats. Com fer que cada ofici aparega nom\u00e9s una vegada? Utilitzant la cl\u00e0usula DISTINCT en la consulta, que fa que no apareguen valors repetits. SELECT DISTINCT ofiEmp FROM empleat; Ara el resultat ser\u00e0: Exercici 1 Si en la base de dades cines tenim una taula cine amb l'estructura: codigo (un id del cine) nombre (el nom del cine) ciudad (el nom de la poblaci\u00f3 on est\u00e0 el cine) Com podr\u00edem fer una consulta que ens mostre la llista de poblacions on hi ha cine? I si una ciutat t\u00e9 m\u00e9s d'un cine, com podem fer que nom\u00e9s aparega una vegada en el llistat?","title":"Mostrar valors \u00fanics"},{"location":"Apartat03/","text":"Funcions d'agrupament Funcions d'agrupament Ja sabem com fer, per exemple, un llistat de lo que cobren els empleats. Amb SELECT souEmp FROM empleats; mostrar\u00edem el sou de tots els empleats, i amb SELECT DISTINCT souEmp FROM empleats; fem que cada sou, encara que diferents empleats cobren el mateix, nom\u00e9s aparega una vegada. Funcions d'agrupament I com fer, per exemple, que ens mostre el sou major de tots? I el m\u00e9s baixet? I el sou mig de tots els empleats? Per fer eixe tipus de c\u00e0lculs que no afecten a una fila sino a v\u00e0ries files, per\u00f2 que han de tornar un valor \u00fanic (no un per fila), hem d'utilitzar les funcions d'agrupament . Funcions d'agrupament Les principals funcions d'agrupament s\u00f3n: FUNCI\u00d3 Utilitat MAX Torna el m\u00e0xim de la columna o expressi\u00f3 indicada MIN Torna el m\u00ednim de la columna o expressi\u00f3 indicada SUM Torna la suma total de la columna o expressi\u00f3 indicada AVG Torna la mitja de la columna o expressi\u00f3 indicada COUNT Torna la quantitat de vegades que apareix el valor o expressi\u00f3 indicada Funcions d'agrupament Exemple Quin \u00e9s el sou m\u00e9s alt que se paga als nostres empleats? SELECT MAX(souEmp) FROM empleats; I si volem que el mateix llistat mostre tamb\u00e9 el sou m\u00e9s baixet? SELECT MAX(souEmp) AS \"Sou m\u00e0xim\", MIN(souEmp) AS \"Sou m\u00ednim\" FROM empleats; Funcions d'agrupament Podem combinar les funcions d'agrupament amb qualsevol condici\u00f3. Quin \u00e9s el sou m\u00e9s alt que se paga als pintors? SELECT MAX(souEmp) AS \"Sou m\u00e0xim pintors\" FROM empleats WHERE ofiEmp=\"Pintor\"; Quin \u00e9s el sou mig dels conserges? SELECT AVG(souEmp) AS \"Sou mig conserges\" FROM empleats WHERE ofiEmp=\"Conserge\"; Quants fontaners tenim en la taula d'empleats? SELECT COUNT(*) AS \"Fontaners\" FROM empleats WHERE ofiEmp=\"Fontaner\"; Funcions d'agrupament Com hem vist, si no anem a comptar res especial, nom\u00e9s files, posem COUNT(*) . De vegades s\u00ed que voldrem comptar alguna cosa espec\u00edfica. Per exemple, quants oficis diferents hi ha a la taula d'empleats? Per llistar els oficis distints que hi ha a la taula fem: SELECT DISTINCT ofiEmp FROM empleats; Per comptar-los, podem fer: SELECT COUNT(DISTINCT ofiEmp) FROM empleats; Altres funcions Altres funcions En SQL disposem tamb\u00e9 de moltes altres funcions que podem utilitzar en les nostres consultes. Algunes d'elles s\u00f3n: FUNCI\u00d3 UTILITAT ABS(x) Torna el valor absolut d'una quantitat CEIL(x) Arredoneix un n\u00famero per dalt CHAR_LENGTH(x)/LENGTH(x) Torna quans car\u00e0cters t\u00e9 la cadena x CONCAT(x,y) Concatena les cadenes x i y CURDATE() Torna la data actual CURTIME() Torna l'hora actual DATE_ADD(data,interval) Suma un interval a una data DATE_FORMAT(data,format) Li dona format a una data DATEDIFF(data1,data2) Torna la difer\u00e8ncia entre dues dates DAYNAME(data) Torna el nom del dia de la semana d'una data DAYOFMONTH(data) Torna el dia del mes d'una data DAYOFWEEK(data) Torna el n\u00famero del dia de la setmana d'una data DAYOFYEAR(data) Torna el n\u00famero del dia de l'any d'una data DIV(x,y) Torna la divisi\u00f3 entera entre x i y FLOOR(x) Arredoneix un n\u00famero per dalt FORMAT(x,decimals) Torna un n\u00famero formatat al n\u00famero de decimals indicat IF(condici\u00f3,valor1,valor2) Torna un valor en funci\u00f3 de si la condici\u00f3 \u00e9s verdadera o falsa IFNULL(x,y) Torna x si no \u00e9s null, i torna y si x \u00e9s null LOWER(cadena) Converteix la cadena a min\u00fascules MOD(x,y) Calcula el resto de la divisi\u00f3 entre x i y MONTH(data) Torna el n\u00famero del mes d'una data MONTHNAME(data) Torna el nom del mes d'una data POW(x,y) Torna el valor de x elevat a y RAND() Torna un n\u00famero aleatori REGEXP Avalua si una cadena compleix un patr\u00f3 REVERSE(cadena) Torna la cadena al rev\u00e9s SQRT(x) Torna l'arrel quadrada de x STRCMP(x,y) Compara dues cadenes SUBSTR() Torna una part d'una cadena TRIM(x) Elimina els espais inicials i finals d'una cadena UPPER(cadena) Converteix la cadena a maj\u00fascules WEEK(data) Torna la setmana de la data YEAR(data) Torna l'any de la data Hi ha moltes m\u00e9s funcions que podeu trobar a la documentaci\u00f3 de MariaDB. Funcions SQL integrades en MariaDB JSON i MariaDB Des de 2016 l'est\u00e1ndar SQL deixa guardar en les taules informaci\u00f3 en format JSON. Per tant, tamb\u00e9 han aparegut funcions per treballar amb objectes de tipus JSON. Pots veure les funcions de MariaDB per treballar amb informaci\u00f3 en format JSON en el seg\u00fcent enlla\u00e7: Funcions JSON en MariaDB Exercici 2 Si en la base de dades cines tenim una taula cine amb l'estructura: codigo (un id del cine) nombre (el nom del cine) ciudad (el nom de la poblaci\u00f3 on est\u00e0 el cine) Com podem comptar quants cines hi ha en la taula? Com podem comptar quantes ciutats hi ha que tinguen cine?","title":"Apartat 03"},{"location":"Apartat03/#funcions-dagrupament","text":"","title":"Funcions d'agrupament"},{"location":"Apartat03/#funcions-dagrupament_1","text":"Ja sabem com fer, per exemple, un llistat de lo que cobren els empleats. Amb SELECT souEmp FROM empleats; mostrar\u00edem el sou de tots els empleats, i amb SELECT DISTINCT souEmp FROM empleats; fem que cada sou, encara que diferents empleats cobren el mateix, nom\u00e9s aparega una vegada.","title":"Funcions d'agrupament"},{"location":"Apartat03/#funcions-dagrupament_2","text":"I com fer, per exemple, que ens mostre el sou major de tots? I el m\u00e9s baixet? I el sou mig de tots els empleats? Per fer eixe tipus de c\u00e0lculs que no afecten a una fila sino a v\u00e0ries files, per\u00f2 que han de tornar un valor \u00fanic (no un per fila), hem d'utilitzar les funcions d'agrupament .","title":"Funcions d'agrupament"},{"location":"Apartat03/#funcions-dagrupament_3","text":"Les principals funcions d'agrupament s\u00f3n: FUNCI\u00d3 Utilitat MAX Torna el m\u00e0xim de la columna o expressi\u00f3 indicada MIN Torna el m\u00ednim de la columna o expressi\u00f3 indicada SUM Torna la suma total de la columna o expressi\u00f3 indicada AVG Torna la mitja de la columna o expressi\u00f3 indicada COUNT Torna la quantitat de vegades que apareix el valor o expressi\u00f3 indicada","title":"Funcions d'agrupament"},{"location":"Apartat03/#funcions-dagrupament_4","text":"","title":"Funcions d'agrupament"},{"location":"Apartat03/#funcions-dagrupament_5","text":"Podem combinar les funcions d'agrupament amb qualsevol condici\u00f3. Quin \u00e9s el sou m\u00e9s alt que se paga als pintors? SELECT MAX(souEmp) AS \"Sou m\u00e0xim pintors\" FROM empleats WHERE ofiEmp=\"Pintor\"; Quin \u00e9s el sou mig dels conserges? SELECT AVG(souEmp) AS \"Sou mig conserges\" FROM empleats WHERE ofiEmp=\"Conserge\"; Quants fontaners tenim en la taula d'empleats? SELECT COUNT(*) AS \"Fontaners\" FROM empleats WHERE ofiEmp=\"Fontaner\";","title":"Funcions d'agrupament"},{"location":"Apartat03/#funcions-dagrupament_6","text":"Com hem vist, si no anem a comptar res especial, nom\u00e9s files, posem COUNT(*) . De vegades s\u00ed que voldrem comptar alguna cosa espec\u00edfica. Per exemple, quants oficis diferents hi ha a la taula d'empleats? Per llistar els oficis distints que hi ha a la taula fem: SELECT DISTINCT ofiEmp FROM empleats; Per comptar-los, podem fer: SELECT COUNT(DISTINCT ofiEmp) FROM empleats;","title":"Funcions d'agrupament"},{"location":"Apartat03/#altres-funcions","text":"","title":"Altres funcions"},{"location":"Apartat03/#altres-funcions_1","text":"En SQL disposem tamb\u00e9 de moltes altres funcions que podem utilitzar en les nostres consultes. Algunes d'elles s\u00f3n: FUNCI\u00d3 UTILITAT ABS(x) Torna el valor absolut d'una quantitat CEIL(x) Arredoneix un n\u00famero per dalt CHAR_LENGTH(x)/LENGTH(x) Torna quans car\u00e0cters t\u00e9 la cadena x CONCAT(x,y) Concatena les cadenes x i y CURDATE() Torna la data actual CURTIME() Torna l'hora actual DATE_ADD(data,interval) Suma un interval a una data DATE_FORMAT(data,format) Li dona format a una data DATEDIFF(data1,data2) Torna la difer\u00e8ncia entre dues dates DAYNAME(data) Torna el nom del dia de la semana d'una data DAYOFMONTH(data) Torna el dia del mes d'una data DAYOFWEEK(data) Torna el n\u00famero del dia de la setmana d'una data DAYOFYEAR(data) Torna el n\u00famero del dia de l'any d'una data DIV(x,y) Torna la divisi\u00f3 entera entre x i y FLOOR(x) Arredoneix un n\u00famero per dalt FORMAT(x,decimals) Torna un n\u00famero formatat al n\u00famero de decimals indicat IF(condici\u00f3,valor1,valor2) Torna un valor en funci\u00f3 de si la condici\u00f3 \u00e9s verdadera o falsa IFNULL(x,y) Torna x si no \u00e9s null, i torna y si x \u00e9s null LOWER(cadena) Converteix la cadena a min\u00fascules MOD(x,y) Calcula el resto de la divisi\u00f3 entre x i y MONTH(data) Torna el n\u00famero del mes d'una data MONTHNAME(data) Torna el nom del mes d'una data POW(x,y) Torna el valor de x elevat a y RAND() Torna un n\u00famero aleatori REGEXP Avalua si una cadena compleix un patr\u00f3 REVERSE(cadena) Torna la cadena al rev\u00e9s SQRT(x) Torna l'arrel quadrada de x STRCMP(x,y) Compara dues cadenes SUBSTR() Torna una part d'una cadena TRIM(x) Elimina els espais inicials i finals d'una cadena UPPER(cadena) Converteix la cadena a maj\u00fascules WEEK(data) Torna la setmana de la data YEAR(data) Torna l'any de la data Hi ha moltes m\u00e9s funcions que podeu trobar a la documentaci\u00f3 de MariaDB. Funcions SQL integrades en MariaDB","title":"Altres funcions"},{"location":"Apartat03/#json-i-mariadb","text":"Des de 2016 l'est\u00e1ndar SQL deixa guardar en les taules informaci\u00f3 en format JSON. Per tant, tamb\u00e9 han aparegut funcions per treballar amb objectes de tipus JSON. Pots veure les funcions de MariaDB per treballar amb informaci\u00f3 en format JSON en el seg\u00fcent enlla\u00e7: Funcions JSON en MariaDB Exercici 2 Si en la base de dades cines tenim una taula cine amb l'estructura: codigo (un id del cine) nombre (el nom del cine) ciudad (el nom de la poblaci\u00f3 on est\u00e0 el cine) Com podem comptar quants cines hi ha en la taula? Com podem comptar quantes ciutats hi ha que tinguen cine?","title":"JSON i MariaDB"},{"location":"Apartat04/","text":"La cl\u00e0usula GROUP BY La cl\u00e0usula GROUP BY Amb la cl\u00e0usula GROUP BY podem agrupar les files pel valor de determinada columna, i les funcions d'agrupament se calcularan per a cada grup i no per a totes les files de la taula. La cl\u00e0usula GROUP BY Exemple En la base de dades de cines tenim la taula sala amb l'estructura: codigo (identificador del cine) lletra (identificador de la sala) butaques (quantitat de butaques de la sala) Suposem que volem saber quantes butaques hi ha, en total, en el cine 1. Farem: SELECT SUM(butaques) FROM sala WHERE codigo=1; I si volem saber quantes butaques hi ha en el cine 2: SELECT SUM(butaques) FROM sala WHERE codigo=2; La cl\u00e0usula GROUP BY I aix\u00ed, cine per cine. Per\u00f2 si tenim molts cines, i volem saber quantes butaques en total hi ha en cada cine, hi ha alguna manera de fer-ho que no siga anar sumant-les un a un? S\u00ed, utilitzant la cl\u00e0usula GROUP BY per a que primer agrupe les sales per cine, i despr\u00e9s sume les butaques per cada cine. SELECT codigo, SUM(butaques) FROM sala GROUP BY codigo; Exercici 3 Fes una consulta que mostre els n\u00fameros de cine i, al costat, quantes sales t\u00e9 cada cine. La cl\u00e0usula HAVING amb GROUP BY De vegades volem fer una consulta amb GROUP BY per\u00f2 que no mostre tots els grups, sino nom\u00e9s els grups que compleixen una condici\u00f3. Compte! Hem de diferenciar entre una consulta que primer agafe les files que compleixen una condici\u00f3 i despr\u00e9s les agrupe (la condici\u00f3 aniria en el WHERE abans del GROUP BY) i una consulta que despr\u00e9s d'agrupar mostre els grups que compleixen una condici\u00f3 (la condici\u00f3 del grup anir\u00e0 amb HAVING despr\u00e9s del GROUP BY) La cl\u00e0usula HAVING amb GROUP BY Exemple Per exemple, recordem que la consulta SELECT codigo, SUM(butaques) FROM sala GROUP BY codigo; mostraba els n\u00fameros de cine, i al costat quantes butaques hi havia en total en cada cine. I si volem mostrar nom\u00e9s els cines que tinguen m\u00e9s de 200 butaques en total? La cl\u00e0usula HAVING amb GROUP BY Seria un error fer: SELECT codigo, SUM(butaques) WHERE butaques > 200 FROM sala GROUP BY codigo; perqu\u00e8 com la condici\u00f3 est\u00e0 en el WHERE , per tant nom\u00e9s agafar\u00e1 les sales que tinguen m\u00e9s de 200 butaques. Nosaltres no volem aix\u00f2, volem saber quantes butaques tenen tots els cines, i despr\u00e9s mostrar nom\u00e9s els cines que tinguen m\u00e9s de 200 butaques entre totes les sales . Lo correcte \u00e9s: SELECT codigo, SUM(butaques) FROM sala GROUP BY codigo HAVING SUM(butaques)>200; Exercici 4 Fes una consulta que mostre els n\u00fameros de cine i, al costat, quantes sales t\u00e9 cada cine per\u00f2 que no mostre els cines que tinguen nom\u00e9s una sala.","title":"Apartat 04"},{"location":"Apartat04/#la-clausula-group-by","text":"","title":"La cl\u00e0usula GROUP BY"},{"location":"Apartat04/#la-clausula-group-by_1","text":"Amb la cl\u00e0usula GROUP BY podem agrupar les files pel valor de determinada columna, i les funcions d'agrupament se calcularan per a cada grup i no per a totes les files de la taula.","title":"La cl\u00e0usula GROUP BY"},{"location":"Apartat04/#la-clausula-group-by_2","text":"","title":"La cl\u00e0usula GROUP BY"},{"location":"Apartat04/#la-clausula-group-by_3","text":"I aix\u00ed, cine per cine. Per\u00f2 si tenim molts cines, i volem saber quantes butaques en total hi ha en cada cine, hi ha alguna manera de fer-ho que no siga anar sumant-les un a un? S\u00ed, utilitzant la cl\u00e0usula GROUP BY per a que primer agrupe les sales per cine, i despr\u00e9s sume les butaques per cada cine. SELECT codigo, SUM(butaques) FROM sala GROUP BY codigo; Exercici 3 Fes una consulta que mostre els n\u00fameros de cine i, al costat, quantes sales t\u00e9 cada cine.","title":"La cl\u00e0usula GROUP BY"},{"location":"Apartat04/#la-clausula-having-amb-group-by","text":"De vegades volem fer una consulta amb GROUP BY per\u00f2 que no mostre tots els grups, sino nom\u00e9s els grups que compleixen una condici\u00f3. Compte! Hem de diferenciar entre una consulta que primer agafe les files que compleixen una condici\u00f3 i despr\u00e9s les agrupe (la condici\u00f3 aniria en el WHERE abans del GROUP BY) i una consulta que despr\u00e9s d'agrupar mostre els grups que compleixen una condici\u00f3 (la condici\u00f3 del grup anir\u00e0 amb HAVING despr\u00e9s del GROUP BY)","title":"La cl\u00e0usula HAVING amb GROUP BY"},{"location":"Apartat04/#la-clausula-having-amb-group-by_1","text":"","title":"La cl\u00e0usula HAVING amb GROUP BY"},{"location":"Apartat04/#la-clausula-having-amb-group-by_2","text":"Seria un error fer: SELECT codigo, SUM(butaques) WHERE butaques > 200 FROM sala GROUP BY codigo; perqu\u00e8 com la condici\u00f3 est\u00e0 en el WHERE , per tant nom\u00e9s agafar\u00e1 les sales que tinguen m\u00e9s de 200 butaques. Nosaltres no volem aix\u00f2, volem saber quantes butaques tenen tots els cines, i despr\u00e9s mostrar nom\u00e9s els cines que tinguen m\u00e9s de 200 butaques entre totes les sales . Lo correcte \u00e9s: SELECT codigo, SUM(butaques) FROM sala GROUP BY codigo HAVING SUM(butaques)>200; Exercici 4 Fes una consulta que mostre els n\u00fameros de cine i, al costat, quantes sales t\u00e9 cada cine per\u00f2 que no mostre els cines que tinguen nom\u00e9s una sala.","title":"La cl\u00e0usula HAVING amb GROUP BY"},{"location":"about/","text":"SQL DDL h1 {color:blue;} h3 {color:green;} table {padding:0px;margin:0px;} th {color:white;font-weight:bold;background-color:blue;} div.comentari { width:80%;margin:10px auto;border:2px solid red; color : green; } Web del m\u00f2dul Bases de Dades de 1r DAW Unitat 07: Consultes SQL IES Jaume II El Just. Curs 22/23","title":"About"},{"location":"about/#sql-ddl","text":"h1 {color:blue;} h3 {color:green;} table {padding:0px;margin:0px;} th {color:white;font-weight:bold;background-color:blue;} div.comentari { width:80%;margin:10px auto;border:2px solid red; color : green; }","title":"SQL DDL"}]}